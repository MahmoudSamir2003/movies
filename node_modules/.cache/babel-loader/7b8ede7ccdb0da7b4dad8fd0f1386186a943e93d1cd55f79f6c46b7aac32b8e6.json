{"ast":null,"code":"var _jsxFileName = \"I:\\\\end\\\\project Rect-4\\\\my-movies\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Nav from \"./components/Nav\";\nimport MoviesList from \"./components/MoviesList\";\nimport { Container } from \"react-bootstrap\";\nimport MovieDetails from \"./components/MovieDetails\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllMoives } from \"./redux/actions/moives\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [pageCount, setpageCount] = useState(0);\n  useEffect(() => {\n    setMovies(dataMovies);\n  }, [dataMovies]);\n\n  //get current page\n  const getPage = async page => {\n    const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=91eaaa7e4565e44b479122381301eb6e&page=${page}`);\n    setMovies(res.data.results);\n    setpageCount(res.data.total_pages);\n  };\n\n  //to search in api\n  const search = async word => {\n    if (word === \"\") {} else {\n      const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=91eaaa7e4565e44b479122381301eb6e&query=${word}&language=ar`);\n      setMovies(res.data.results);\n      setpageCount(res.data.total_pages);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font color-body\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(MoviesList, {\n              movies: movies,\n              getPage: getPage,\n              pageCount: pageCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movie/:id\",\n            element: /*#__PURE__*/_jsxDEV(MovieDetails, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fJ1KbNeXA6VmKVuMjZ65Ysih2RQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Nav","MoviesList","Container","MovieDetails","axios","useEffect","useState","BrowserRouter","Routes","Route","useSelector","useDispatch","getAllMoives","jsxDEV","_jsxDEV","App","_s","movies","setMovies","pageCount","setpageCount","dataMovies","getPage","page","res","get","data","results","total_pages","search","word","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["I:/end/project Rect-4/my-movies/src/App.js"],"sourcesContent":["import Nav from \"./components/Nav\";\nimport MoviesList from \"./components/MoviesList\";\nimport { Container } from \"react-bootstrap\";\nimport MovieDetails from \"./components/MovieDetails\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport{useSelector,useDispatch} from \"react-redux\"\nimport { getAllMoives } from \"./redux/actions/moives\";\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [pageCount, setpageCount] = useState(0);\n\nuseEffect(()=>{\n\n  setMovies(dataMovies)\n\n},[dataMovies])\n \n  //get current page\n  const getPage = async (page) => {\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/movie/popular?api_key=91eaaa7e4565e44b479122381301eb6e&page=${page}`\n    );\n    setMovies(res.data.results);\n    setpageCount(res.data.total_pages);\n  };\n \n\n  //to search in api\n  const search = async (word) => {\n    if (word === \"\") {\n    } else {\n      const res = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=91eaaa7e4565e44b479122381301eb6e&query=${word}&language=ar`\n      );\n      setMovies(res.data.results);\n      setpageCount(res.data.total_pages);\n    }\n  };\n\n  return (\n    <div className=\"font color-body\">\n      <Nav search={search} />\n      <Container>\n        <BrowserRouter>\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <MoviesList\n                  movies={movies}\n                  getPage={getPage}\n                  pageCount={pageCount}\n                />\n              }\n            />\n\n            <Route path=\"/movie/:id\" element={<MovieDetails />} />\n          </Routes>\n        </BrowserRouter>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}